# Generated by Django 4.0 on 2024-06-24 18:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('es_coordinador', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_area', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_empresa', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='MotivoLicencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_motivo_licencia', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='MotivoPermiso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_motivo', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='TipoLicencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_tipo_licencia', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_turno', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Permiso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('nombre_completo', models.CharField(max_length=100)),
                ('cedula', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='La cedula debe contener solo números.', regex='^[0-9]*$')])),
                ('fecha_permiso', models.DateField()),
                ('fecha_fin_permiso', models.DateField(null=True)),
                ('hora_salida', models.TimeField(blank=True, null=True)),
                ('hora_llegada', models.TimeField(blank=True, null=True)),
                ('nombre_coordinador', models.CharField(max_length=50)),
                ('compensa_tiempo', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=3)),
                ('datos_adjuntos', models.FileField(blank=True, null=True, upload_to='archivos_adjuntos/documento/')),
                ('observacion', models.TextField(blank=True, null=True)),
                ('verificacion', models.CharField(blank=True, choices=[('Aprobado', 'Aprobado'), ('Rechazado', 'Rechazado')], max_length=20, null=True)),
                ('estado', models.TextField(blank=True, null=True)),
                ('fecha_verificacion', models.DateTimeField(blank=True, editable=False, null=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_permisos.area')),
                ('creado_por', models.ForeignKey(default=None, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='Permiso_Creado_Por', to='app_permisos.customuser')),
                ('motivo_permiso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_permisos.motivopermiso')),
                ('turno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_permisos.turno')),
                ('verificado_por', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Permiso_Verificado_Por', to='app_permisos.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Licencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('nombre_completo', models.CharField(max_length=100)),
                ('cedula', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='La cedula debe contener solo números.', regex='^[0-9]*$')])),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('observacion_licencia', models.TextField(blank=True, null=True)),
                ('nombre_coordinador', models.CharField(max_length=50)),
                ('datos_adjuntos_licencias', models.FileField(blank=True, null=True, upload_to='archivos_adjuntos_licencias/documento/')),
                ('verificacion_licencia', models.CharField(blank=True, choices=[('Aprobado', 'Aprobado'), ('Rechazado', 'Rechazado')], max_length=20, null=True)),
                ('estado_licencia', models.TextField(blank=True, null=True)),
                ('aprobacion_rrhh', models.CharField(blank=True, choices=[('Aprobado', 'Aprobado'), ('Rechazado', 'Rechazado')], max_length=20, null=True)),
                ('observacion_rrhh', models.TextField(blank=True, null=True)),
                ('fecha_verificacion', models.DateTimeField(blank=True, editable=False, null=True)),
                ('fecha_aprobacion', models.DateTimeField(blank=True, editable=False, null=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_permisos.area')),
                ('creada_por', models.ForeignKey(default=None, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='Licencia_Creada_Por', to='app_permisos.customuser')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_permisos.empresa')),
                ('motivo_licencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_permisos.motivolicencia')),
                ('tipo_licencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_permisos.tipolicencia')),
                ('verificacion_rrhh', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Licencia_Verificada_RRHH', to='app_permisos.customuser')),
                ('verificada_por', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Licencia_Verificado_Por', to='app_permisos.customuser')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_permisos.area'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.Group', verbose_name='grupos'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.Permission', verbose_name='Permisos usuario'),
        ),
    ]
